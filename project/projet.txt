CREATE TABLE Artist (
  ArtistID INT PRIMARY KEY,
  ArtistName VARCHAR(255),
  AboutParagraph TEXT,
  Discography TEXT,
  PopularReleases TEXT,
  MonthlyListeners INT
);
 
CREATE TABLE Listener (
  ListenerID INT PRIMARY KEY,
  Username VARCHAR(255)
  -- Additional columns for Listener if needed
);
 
CREATE TABLE Single (
  SingleID INT PRIMARY KEY,
  SingleName VARCHAR(255),
  SingleDuration INT,
  Genre VARCHAR(255),
  ArtistID INT,
  FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);
 
CREATE TABLE Album (
  AlbumID INT PRIMARY KEY,
  AlbumName VARCHAR(255),
  NumTracks INT,
  Genre VARCHAR(255),
  ArtistID INT,
  FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);
 
CREATE TABLE Track (
  TrackID INT PRIMARY KEY,
  TrackName VARCHAR(255),
  TrackDuration INT,
  AlbumID INT,
  FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID)
);
 
CREATE TABLE LikedSongs (
  LikedSongsID INT PRIMARY KEY,
  ListenerID INT,
  SingleID INT,
  AlbumID INT,
  TrackID INT,
  FOREIGN KEY (ListenerID) REFERENCES Listener(ListenerID),
  FOREIGN KEY (SingleID) REFERENCES Single(SingleID),
  FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID),
  FOREIGN KEY (TrackID) REFERENCES Track(TrackID)
);
 
CREATE TABLE Playlists (
  PlaylistID INT PRIMARY KEY,
  PlaylistName VARCHAR(255),
  ListenerID INT,
  FOREIGN KEY (ListenerID) REFERENCES Listener(ListenerID)
);
 
CREATE TABLE PlaylistTracks (
  PlaylistTracksID INT PRIMARY KEY,
  PlaylistID INT,
  TrackID INT,
  FOREIGN KEY (PlaylistID) REFERENCES Playlists(PlaylistID),
  FOREIGN KEY (TrackID) REFERENCES Track(TrackID)
);
